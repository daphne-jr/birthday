"use strict";(self.webpackChunkbirthday=self.webpackChunkbirthday||[]).push([[143],{2568:(e,t,n)=>{var r,a=n(7294),o=n(3935),l=n(9711),c=n(6974),i=n(1984),u=n(2263),s=n(7709);!function(e){e.horizontal="horizontal",e.vertical="vertical",e.inline="inline"}(r||(r={}));var f=s.Z.SubMenu;function m(){return a.createElement("div",{className:"navigationBar--IiQfj"},a.createElement(s.Z,{mode:r.horizontal},a.createElement(f,{key:"games",icon:a.createElement(i.Z,null),title:"Games"},a.createElement(s.Z.Item,{key:"basic-typing-game"},a.createElement(l.rU,{to:"/game"},"Basic Typing Game"))),a.createElement(s.Z.Item,{key:"canvas",icon:a.createElement(u.Z,null)},a.createElement(l.rU,{to:"/canvas"},"Canvas"))))}var p,v=(p=function(e,t){return p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},p(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});const E=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return v(t,e),t.prototype.render=function(){return a.createElement("div",null,a.createElement(m,null),"Home"," ",a.createElement(l.rU,{to:"/game"},"game"))},t}(a.Component);var d=n(2633),y=(0,d.cn)(0),h=(0,d.cn)(0),g=(0,d.cn)(""),w=(0,d.cn)(""),_=(0,d.cn)([]);function O(){var e=(0,d.KO)(y)[0],t=(0,d.KO)(h)[0];return a.createElement(a.Fragment,null,a.createElement("div",null,"Level:"," ",t),a.createElement("div",null,"Score:"," ",e))}var b,Z=n(8324),x=n.n(Z);!function(e){e[e.default=0]="default",e[e.correct=1]="correct",e[e.wrong=2]="wrong",e[e.fixed=3]="fixed"}(b||(b={}));var C=function(e){return Array(e).fill(0)};function j(){var e=(0,d.KO)(g),t=e[0],n=e[1],r=(0,d.KO)(_),o=r[0],l=r[1];return(0,a.useEffect)((function(){n(x()())}),[]),(0,a.useEffect)((function(){l(C(t.length))}),[t]),a.createElement("div",{className:"randWord--GIMfR"},t.split("").map((function(e,t){var n="";return o[t]===b.correct?n="correct--yznGe":o[t]===b.wrong?n="wrong--vMGxU":o[t]===b.fixed&&(n="fixed--vo2Fd"),a.createElement("span",{key:t,className:n},e)})))}var k=n(4107);function I(){var e=(0,d.KO)(w),t=e[0],n=e[1],r=(0,d.KO)(g),o=r[0],l=r[1],c=(0,d.KO)(_),i=c[0],u=c[1],s=(0,d.KO)(y),f=s[0],m=s[1];return a.createElement(k.Z,{value:t,onChange:function(e){var t=e.target.value,r=i.slice(0),a=t.toLowerCase();if(a.split("").forEach((function(e,t){e!==o.charAt(t)?r[t]=b.wrong:r[t]=[b.wrong,b.fixed].includes(i[t])?b.fixed:b.correct})),a===o){var c=x()();return l(c),u(C(c.length)),n(""),void m(f+1)}u(r),n(t)}})}function K(){return a.createElement("div",{className:"basicTypeGame--yZgov"},a.createElement("div",{className:"paper--zD401"},a.createElement(O,null),a.createElement("div",{className:"centerBorder--L3Uq8"},a.createElement(j,null),a.createElement(I,null))))}var T=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const A=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return T(t,e),t.prototype.render=function(){return a.createElement("div",null,a.createElement(K,null))},t}(a.Component);var N=n(177),P=n(6256),G=n(9002),S=n(5485),U=n(9891),z=n(331),B=n(404),L=P.Z.Paragraph,W=P.Z.Title,M=a.createElement("div",null,a.createElement(W,{level:5,underline:!0},"Known Issues"),a.createElement(L,null,"Safari may have issues with downloading files, displaying images and playing chat alerts in canvas."),a.createElement(L,null,"If `http://` and `https://` contents are mixed in 1 page, Canvas will display blank because of mixed content security settings. This is browser issue."));function F(e){var t=e.children;return a.createElement(G.Z,null,t)}function R(){return a.createElement(S.Z,null,a.createElement(U.Z,{title:"Learning Canvas",className:"site-page-header",subTitle:"Introduction",tags:a.createElement(z.Z,{color:"success"},"Important"),extra:[a.createElement(B.Z,{key:"1",href:"https://canvas.northwestern.edu/courses/128385/pages/which-browser-should-i-use?module_item_id=1708726",target:"_blank",rel:"noreferrer noopener"},"Reference")],avatar:{icon:a.createElement(N.Z,null)}},a.createElement(F,null,M)))}function q(){return a.createElement("div",{className:"notes--BOcrj"},a.createElement(R,null))}n(2334);var D=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),H=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return D(t,e),t.prototype.render=function(){return a.createElement(l.UT,null,a.createElement(c.Z5,null,a.createElement(c.AW,{path:"/",element:a.createElement(E,null)}),a.createElement(c.AW,{path:"game",element:a.createElement(A,null)}),a.createElement(c.AW,{path:"canvas",element:a.createElement(q,null)})))},t}(a.Component);o.render(a.createElement(H,null),document.getElementById("root"))}},e=>{e.O(0,[51,913,294,612,153,46,320,14,473,855,633,586,135,194,305,500,178,843,655,25,220,105,835,280,29,70,617,216,987,124,90,290,698,642,162,5,315,260,91],(()=>(2568,e(e.s=2568)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljL2pzL2FwcF84MDNmYWUxMTIwMWU4OWJkMWRhMy5qcyIsIm1hcHBpbmdzIjoidUdBQ1lBLEUsdUVBQVosU0FBWUEsR0FDViwwQkFDQSxzQkFDQSxrQkFIRixDQUFZQSxJQUFBQSxFQUFTLEtDT2IsSUFBQUMsRUFBWSxZQUViLFNBQVNDLElBQ2QsT0FDRSx1QkFBS0MsVUNYdUIsd0JEWTFCLGdCQUFDLElBQUksQ0FBQ0MsS0FBTUosRUFBVUssWUFDcEIsZ0JBQUNKLEVBQU8sQ0FBQ0ssSUFBSSxRQUFRQyxLQUFNLGdCQUFDQyxFQUFBLEVBQWMsTUFBS0MsTUFBTSxTQUNuRCxnQkFBQyxTQUFTLENBQUNILElBQUkscUJBQ2IsZ0JBQUMsS0FBSSxDQUFDSSxHQUFHLFNBQU8sdUJBR3BCLGdCQUFDLFNBQVMsQ0FBQ0osSUFBSSxTQUFTQyxLQUFNLGdCQUFDSSxFQUFBLEVBQVksT0FDekMsZ0JBQUMsS0FBSSxDQUFDRCxHQUFHLFdBQVMsYSxpZEVoQjVCLHlCLCtDQVdBLE9BWGtDLE9BQ2hDLFlBQUFFLE9BQUEsV0FDRSxPQUNFLDJCQUNFLGdCQUFDVixFQUFhLE0sT0FFYixJQUNELGdCQUFDLEtBQUksQ0FBQ1EsR0FBRyxTQUFPLFVBSXhCLEVBWEEsQ0FBa0MsYSxjQ0ZyQkcsR0FBWSxRQUFLLEdBQ2pCQyxHQUFZLFFBQUssR0FDakJDLEdBQVcsUUFBSyxJQUNoQkMsR0FBWSxRQUFLLElBQ2pCQyxHQUFjLFFBQUssSUNGekIsU0FBU0MsSUFDUCxJQUFBQyxHQUFTLFFBQVFOLEdBQVUsR0FDM0JPLEdBQVMsUUFBUU4sR0FBVSxHQUNsQyxPQUNFLGdDQUNFLDJCLFNBRUcsSUFDQU0sR0FFSCwyQixTQUVHLElBQ0FELEksSUNoQkdFLEUsb0JBQVosU0FBWUEsR0FDVix5QkFDQSx5QkFDQSxxQkFDQSxxQkFKRixDQUFZQSxJQUFBQSxFQUFRLEtDRGIsSUFBTUMsRUFBZSxTQUFDQyxHQUFtQixPQUFBQyxNQUFNRCxHQUFRRSxLQUFLLElDUzVELFNBQVNDLElBQ1Is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LE9BWm1CLE9BQ2pCLFlBQUFqRCxPQUFBLFdBQ0UsT0FDRSxnQkFBQyxLQUFVLEtBQ1QsZ0JBQUMsS0FBTSxLQUNMLGdCQUFDLEtBQUssQ0FBQzRELEtBQUssSUFBSUMsUUFBUyxnQkFBQyxFQUFJLFFBQzlCLGdCQUFDLEtBQUssQ0FBQ0QsS0FBSyxPQUFPQyxRQUFTLGdCQUFDLEVBQUksUUFDakMsZ0JBQUMsS0FBSyxDQUFDRCxLQUFLLFNBQVNDLFFBQVMsZ0JBQUNGLEVBQU0sV0FLL0MsRUFaQSxDQUFtQixhQWNuQixTQUNFLGdCQUFDRyxFQUFJLE1BQ0xDLFNBQVNDLGVBQWUsVyIsInNvdXJjZXMiOlsid2VicGFjazovL2JpcnRoZGF5Ly4vc3JjL2xpYi9jb25zdGFudC50cyIsIndlYnBhY2s6Ly9iaXJ0aGRheS8uL3NyYy9jb250YWluZXIvaG9tZS9uYXZpZ2F0aW9uLWJhci50c3giLCJ3ZWJwYWNrOi8vYmlydGhkYXkvLi9zcmMvY29udGFpbmVyL2hvbWUvaW5kZXgubS5sZXNzP2IxYWEiLCJ3ZWJwYWNrOi8vYmlydGhkYXkvLi9zcmMvY29udGFpbmVyL2hvbWUvaW5kZXgudHN4Iiwid2VicGFjazovL2JpcnRoZGF5Ly4vc3JjL3N0b3JlL2dhbWUvYmFzaWMtdHlwZS1zdG9yZS50cyIsIndlYnBhY2s6Ly9iaXJ0aGRheS8uL3NyYy9jb250YWluZXIvZ2FtZS9iYXNpYy10eXBlL3Njb3Jlcy50c3giLCJ3ZWJwYWNrOi8vYmlydGhkYXkvLi9zcmMvY29udGFpbmVyL2dhbWUvYmFzaWMtdHlwZS9jb25zdGFudC50cyIsIndlYnBhY2s6Ly9iaXJ0aGRheS8uL3NyYy9saWIvdXRpbHMudHMiLCJ3ZWJwYWNrOi8vYmlydGhkYXkvLi9zcmMvY29udGFpbmVyL2dhbWUvYmFzaWMtdHlwZS9yYW5kb20td29yZC50c3giLCJ3ZWJwYWNrOi8vYmlydGhkYXkvLi9zcmMvY29udGFpbmVyL2dhbWUvYmFzaWMtdHlwZS9pbmRleC5tLmxlc3M/ZGU1YyIsIndlYnBhY2s6Ly9iaXJ0aGRheS8uL3NyYy9jb250YWluZXIvZ2FtZS9iYXNpYy10eXBlL3VzZXItaW5wdXQudHN4Iiwid2VicGFjazovL2JpcnRoZGF5Ly4vc3JjL2NvbnRhaW5lci9nYW1lL2Jhc2ljLXR5cGUvaW5kZXgudHN4Iiwid2VicGFjazovL2JpcnRoZGF5Ly4vc3JjL2NvbnRhaW5lci9nYW1lL2luZGV4LnRzeCIsIndlYnBhY2s6Ly9iaXJ0aGRheS8uL3NyYy9jb250YWluZXIvY2FudmFzL25vdGVzLnRzeCIsIndlYnBhY2s6Ly9iaXJ0aGRheS8uL3NyYy9jb250YWluZXIvY2FudmFzL2luZGV4LnRzeCIsIndlYnBhY2s6Ly9iaXJ0aGRheS8uL3NyYy9jb250YWluZXIvY2FudmFzL2luZGV4Lm0ubGVzcz9iOTQ5Iiwid2VicGFjazovL2JpcnRoZGF5Ly4vc3JjL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuZXhwb3J0IGVudW0gRU1lbnVNb2RlIHtcbiAgaG9yaXpvbnRhbCA9ICdob3Jpem9udGFsJyxcbiAgdmVydGljYWwgPSAndmVydGljYWwnLFxuICBpbmxpbmUgPSAnaW5saW5lJyxcbn1cbiIsImltcG9ydCB7IFN0YXJPdXRsaW5lZCwgVHJvcGh5T3V0bGluZWQgfSBmcm9tICdAYW50LWRlc2lnbi9pY29ucyc7XG5pbXBvcnQgeyBNZW51IH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgeyBFTWVudU1vZGUgfSBmcm9tICdsaWIvY29uc3RhbnQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2luZGV4Lm0ubGVzcyc7XG5cbmNvbnN0IHsgU3ViTWVudSB9ID0gTWVudTtcblxuZXhwb3J0IGZ1bmN0aW9uIE5hdmlnYXRpb25CYXIoKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5uYXZpZ2F0aW9uQmFyfT5cbiAgICAgIDxNZW51IG1vZGU9e0VNZW51TW9kZS5ob3Jpem9udGFsfT5cbiAgICAgICAgPFN1Yk1lbnUga2V5PVwiZ2FtZXNcIiBpY29uPXs8VHJvcGh5T3V0bGluZWQgLz59IHRpdGxlPVwiR2FtZXNcIj5cbiAgICAgICAgICA8TWVudS5JdGVtIGtleT1cImJhc2ljLXR5cGluZy1nYW1lXCI+XG4gICAgICAgICAgICA8TGluayB0bz1cIi9nYW1lXCI+QmFzaWMgVHlwaW5nIEdhbWU8L0xpbms+XG4gICAgICAgICAgPC9NZW51Lkl0ZW0+XG4gICAgICAgIDwvU3ViTWVudT5cbiAgICAgICAgPE1lbnUuSXRlbSBrZXk9XCJjYW52YXNcIiBpY29uPXs8U3Rhck91dGxpbmVkIC8+fT5cbiAgICAgICAgICA8TGluayB0bz1cIi9jYW52YXNcIj5DYW52YXM8L0xpbms+XG4gICAgICAgIDwvTWVudS5JdGVtPlxuICAgICAgPC9NZW51PlxuICAgIDwvZGl2PlxuICApO1xufVxuIiwiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQgZGVmYXVsdCB7XCJuYXZpZ2F0aW9uQmFyXCI6XCJuYXZpZ2F0aW9uQmFyLS1JaVFmalwifTsiLCJpbXBvcnQgeyBOYXZpZ2F0aW9uQmFyIH0gZnJvbSAnY29udGFpbmVyL2hvbWUvbmF2aWdhdGlvbi1iYXInO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSG9tZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPE5hdmlnYXRpb25CYXIgLz5cbiAgICAgICAgSG9tZVxuICAgICAgICB7JyAnfVxuICAgICAgICA8TGluayB0bz1cIi9nYW1lXCI+Z2FtZTwvTGluaz5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiIsImltcG9ydCB7IGF0b20gfSBmcm9tICdqb3RhaSc7XG5cbmV4cG9ydCBjb25zdCBzY29yZUF0b20gPSBhdG9tKDApO1xuZXhwb3J0IGNvbnN0IGxldmVsQXRvbSA9IGF0b20oMCk7XG5leHBvcnQgY29uc3Qgd29yZEF0b20gPSBhdG9tKCcnKTtcbmV4cG9ydCBjb25zdCBpbnB1dEF0b20gPSBhdG9tKCcnKTtcbmV4cG9ydCBjb25zdCBjb3JyZWN0QXRvbSA9IGF0b20oW10pO1xuIiwiaW1wb3J0IHsgdXNlQXRvbSB9IGZyb20gJ2pvdGFpJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBsZXZlbEF0b20sIHNjb3JlQXRvbSB9IGZyb20gJ3N0b3JlL2dhbWUvYmFzaWMtdHlwZS1zdG9yZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBTY29yZXMoKSB7XG4gIGNvbnN0IFtzY29yZV0gPSB1c2VBdG9tKHNjb3JlQXRvbSk7XG4gIGNvbnN0IFtsZXZlbF0gPSB1c2VBdG9tKGxldmVsQXRvbSk7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXY+XG4gICAgICAgIExldmVsOlxuICAgICAgICB7JyAnfVxuICAgICAgICB7bGV2ZWx9XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIFNjb3JlOlxuICAgICAgICB7JyAnfVxuICAgICAgICB7c2NvcmV9XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn1cbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5leHBvcnQgZW51bSBFQ29ycmVjdCB7XG4gIGRlZmF1bHQgPSAwLFxuICBjb3JyZWN0ID0gMSxcbiAgd3JvbmcgPSAyLFxuICBmaXhlZCA9IDMsXG59XG4iLCJleHBvcnQgY29uc3QgaW5pdEludEFycmF5ID0gKGxlbmd0aDogbnVtYmVyKSA9PiBBcnJheShsZW5ndGgpLmZpbGwoMCk7XG4iLCJpbXBvcnQgcmFuZG9tV29yZCBmcm9tICdyYW5kb20td29yZHMnO1xuaW1wb3J0IHsgdXNlQXRvbSB9IGZyb20gJ2pvdGFpJztcbmltcG9ydCB7IGNvcnJlY3RBdG9tLCB3b3JkQXRvbSB9IGZyb20gJ3N0b3JlL2dhbWUvYmFzaWMtdHlwZS1zdG9yZSc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBFQ29ycmVjdCB9IGZyb20gJ2NvbnRhaW5lci9nYW1lL2Jhc2ljLXR5cGUvY29uc3RhbnQnO1xuaW1wb3J0IHsgaW5pdEludEFycmF5IH0gZnJvbSAnbGliL3V0aWxzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9pbmRleC5tLmxlc3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gUmFuZG9tV29yZCgpIHtcbiAgY29uc3QgW3JhbmRXb3JkLCBzZXRSYW5kV29yZF0gPSB1c2VBdG9tKHdvcmRBdG9tKTtcbiAgY29uc3QgW2NvcnJlY3RBcnIsIHNldENvcnJlY3RBcnJdID0gdXNlQXRvbShjb3JyZWN0QXRvbSk7XG4gIC8vIGluaXQgcmFuZG9tIHdvcmRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRSYW5kV29yZChyYW5kb21Xb3JkKCkpO1xuICB9LCBbXSk7XG4gIC8vIHJlc2V0IGNvcnJlY3RBcnJcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRDb3JyZWN0QXJyKGluaXRJbnRBcnJheShyYW5kV29yZC5sZW5ndGgpKTtcbiAgfSwgW3JhbmRXb3JkXSk7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5yYW5kV29yZH0+XG4gICAgICB7cmFuZFdvcmQuc3BsaXQoJycpLm1hcCgoYywgaSkgPT4ge1xuICAgICAgICBsZXQgY2xhc3NOYW1lID0gJyc7XG4gICAgICAgIGlmIChjb3JyZWN0QXJyW2ldID09PSBFQ29ycmVjdC5jb3JyZWN0KSB7XG4gICAgICAgICAgY2xhc3NOYW1lID0gc3R5bGVzLmNvcnJlY3Q7XG4gICAgICAgIH0gZWxzZSBpZiAoY29ycmVjdEFycltpXSA9PT0gRUNvcnJlY3Qud3JvbmcpIHtcbiAgICAgICAgICBjbGFzc05hbWUgPSBzdHlsZXMud3Jvbmc7XG4gICAgICAgIH0gZWxzZSBpZiAoY29ycmVjdEFycltpXSA9PT0gRUNvcnJlY3QuZml4ZWQpIHtcbiAgICAgICAgICBjbGFzc05hbWUgPSBzdHlsZXMuZml4ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxzcGFuIGtleT17aX0gY2xhc3NOYW1lPXtjbGFzc05hbWV9PntjfTwvc3Bhbj47XG4gICAgICB9KX1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IGRlZmF1bHQge1wiYmFzaWNUeXBlR2FtZVwiOlwiYmFzaWNUeXBlR2FtZS0teVpnb3ZcIixcInJhbmRXb3JkXCI6XCJyYW5kV29yZC0tR0lNZlJcIixcImNvcnJlY3RcIjpcImNvcnJlY3QtLXl6bkdlXCIsXCJ3cm9uZ1wiOlwid3JvbmctLXZNR3hVXCIsXCJmaXhlZFwiOlwiZml4ZWQtLXZvMkZkXCIsXCJwYXBlclwiOlwicGFwZXItLXpENDAxXCIsXCJjZW50ZXJCb3JkZXJcIjpcImNlbnRlckJvcmRlci0tTDNVcThcIn07IiwiaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdhbnRkJztcbmltcG9ydCByYW5kb21Xb3JkIGZyb20gJ3JhbmRvbS13b3Jkcyc7XG5pbXBvcnQgeyBFQ29ycmVjdCB9IGZyb20gJ2NvbnRhaW5lci9nYW1lL2Jhc2ljLXR5cGUvY29uc3RhbnQnO1xuaW1wb3J0IHsgdXNlQXRvbSB9IGZyb20gJ2pvdGFpJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBpbnB1dEF0b20sIHdvcmRBdG9tLCBjb3JyZWN0QXRvbSwgc2NvcmVBdG9tLFxufSBmcm9tICdzdG9yZS9nYW1lL2Jhc2ljLXR5cGUtc3RvcmUnO1xuaW1wb3J0IHsgaW5pdEludEFycmF5IH0gZnJvbSAnbGliL3V0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIFVzZXJJbnB1dCgpIHtcbiAgY29uc3QgW3VzZXJWYWx1ZSwgc2V0VXNlclZhbHVlXSA9IHVzZUF0b20oaW5wdXRBdG9tKTtcbiAgY29uc3QgW3JhbmRXb3JkLCBzZXRSYW5kV29yZF0gPSB1c2VBdG9tKHdvcmRBdG9tKTtcbiAgY29uc3QgW2NvcnJlY3RBcnIsIHNldENvcnJlY3RBcnJdID0gdXNlQXRvbShjb3JyZWN0QXRvbSk7XG4gIGNvbnN0IFtzY29yZSwgc2V0U2NvcmVdID0gdXNlQXRvbShzY29yZUF0b20pO1xuXG4gIGNvbnN0IG9uQ2hhbmdlSW5wdXQ6IFJlYWN0LkNoYW5nZUV2ZW50SGFuZGxlcjxIVE1MSW5wdXRFbGVtZW50PiA9IChldmVudCkgPT4ge1xuICAgIGNvbnN0IHsgdGFyZ2V0OiB7IHZhbHVlIH0gfSA9IGV2ZW50O1xuICAgIGNvbnN0IG5ld0NvcnJlY3RBcnIgPSBjb3JyZWN0QXJyLnNsaWNlKDApO1xuICAgIGNvbnN0IGxvd2VyVmFsdWUgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpO1xuICAgIGxvd2VyVmFsdWUuc3BsaXQoJycpLmZvckVhY2goKGMsIGkpID0+IHtcbiAgICAgIGlmIChjID09PSByYW5kV29yZC5jaGFyQXQoaSkpIHtcbiAgICAgICAgbmV3Q29ycmVjdEFycltpXSA9IFtFQ29ycmVjdC53cm9uZywgRUNvcnJlY3QuZml4ZWRdXG4gICAgICAgICAgLmluY2x1ZGVzKGNvcnJlY3RBcnJbaV0pID8gRUNvcnJlY3QuZml4ZWQgOiBFQ29ycmVjdC5jb3JyZWN0O1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBuZXdDb3JyZWN0QXJyW2ldID0gRUNvcnJlY3Qud3Jvbmc7XG4gICAgfSk7XG4gICAgaWYgKGxvd2VyVmFsdWUgPT09IHJhbmRXb3JkKSB7XG4gICAgICBjb25zdCBuZXdSYW5kb21Xb3JkID0gcmFuZG9tV29yZCgpO1xuICAgICAgc2V0UmFuZFdvcmQobmV3UmFuZG9tV29yZCk7XG4gICAgICBzZXRDb3JyZWN0QXJyKGluaXRJbnRBcnJheShuZXdSYW5kb21Xb3JkLmxlbmd0aCkpO1xuICAgICAgc2V0VXNlclZhbHVlKCcnKTtcbiAgICAgIHNldFNjb3JlKHNjb3JlICsgMSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHNldENvcnJlY3RBcnIobmV3Q29ycmVjdEFycik7XG4gICAgc2V0VXNlclZhbHVlKHZhbHVlKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxJbnB1dFxuICAgICAgdmFsdWU9e3VzZXJWYWx1ZX1cbiAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUlucHV0fVxuICAgIC8+XG4gICk7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU2NvcmVzIH0gZnJvbSAnY29udGFpbmVyL2dhbWUvYmFzaWMtdHlwZS9zY29yZXMnO1xuaW1wb3J0IHsgUmFuZG9tV29yZCB9IGZyb20gJ2NvbnRhaW5lci9nYW1lL2Jhc2ljLXR5cGUvcmFuZG9tLXdvcmQnO1xuaW1wb3J0IHsgVXNlcklucHV0IH0gZnJvbSAnY29udGFpbmVyL2dhbWUvYmFzaWMtdHlwZS91c2VyLWlucHV0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9pbmRleC5tLmxlc3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gQmFzaWNUeXBlR2FtZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJhc2ljVHlwZUdhbWV9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5wYXBlcn0+XG4gICAgICAgIDxTY29yZXMgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jZW50ZXJCb3JkZXJ9PlxuICAgICAgICAgIDxSYW5kb21Xb3JkIC8+XG4gICAgICAgICAgPFVzZXJJbnB1dCAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIiwiaW1wb3J0IHsgQmFzaWNUeXBlR2FtZSB9IGZyb20gJ2NvbnRhaW5lci9nYW1lL2Jhc2ljLXR5cGUnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8ZGl2PjxCYXNpY1R5cGVHYW1lIC8+PC9kaXY+O1xuICB9XG59XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9hbmNob3ItaXMtdmFsaWQgKi9cbmltcG9ydCB7IExpa2VGaWxsZWQgfSBmcm9tICdAYW50LWRlc2lnbi9pY29ucyc7XG5pbXBvcnQge1xuICBQYWdlSGVhZGVyLCBUYWcsIEJ1dHRvbiwgUm93LCBUeXBvZ3JhcGh5LCBDYXJkLFxufSBmcm9tICdhbnRkJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9pbmRleC5tLmxlc3MnO1xuXG5jb25zdCB7IFBhcmFncmFwaCwgVGl0bGUgfSA9IFR5cG9ncmFwaHk7XG5cbmNvbnN0IGNvbnRlbnQgPSAoXG4gIDxkaXY+XG4gICAgPFRpdGxlIGxldmVsPXs1fSB1bmRlcmxpbmU+S25vd24gSXNzdWVzPC9UaXRsZT5cbiAgICA8UGFyYWdyYXBoPlxuICAgICAgU2FmYXJpIG1heSBoYXZlIGlzc3VlcyB3aXRoIGRvd25sb2FkaW5nIGZpbGVzLFxuICAgICAgZGlzcGxheWluZyBpbWFnZXMgYW5kIHBsYXlpbmcgY2hhdCBhbGVydHMgaW4gY2FudmFzLlxuICAgIDwvUGFyYWdyYXBoPlxuICAgIDxQYXJhZ3JhcGg+XG4gICAgICBJZiBgaHR0cDovL2AgYW5kIGBodHRwczovL2AgY29udGVudHMgYXJlIG1peGVkIGluIDFcbiAgICAgIHBhZ2UsIENhbnZhcyB3aWxsIGRpc3BsYXkgYmxhbmsgYmVjYXVzZSBvZiBtaXhlZCBjb250ZW50XG4gICAgICBzZWN1cml0eSBzZXR0aW5ncy4gVGhpcyBpcyBicm93c2VyIGlzc3VlLlxuICAgIDwvUGFyYWdyYXBoPlxuICA8L2Rpdj5cbik7XG5cbmZ1bmN0aW9uIENvbnRlbnQoeyBjaGlsZHJlbiB9OlxuICB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfSkge1xuICByZXR1cm4gKFxuICAgIDxSb3c+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Sb3c+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBOb3RlcygpIHtcbiAgcmV0dXJuIChcbiAgICA8Q2FyZD5cbiAgICAgIDxQYWdlSGVhZGVyXG4gICAgICAgIHRpdGxlPVwiTGVhcm5pbmcgQ2FudmFzXCJcbiAgICAgICAgY2xhc3NOYW1lPVwic2l0ZS1wYWdlLWhlYWRlclwiXG4gICAgICAgIHN1YlRpdGxlPVwiSW50cm9kdWN0aW9uXCJcbiAgICAgICAgdGFncz17PFRhZyBjb2xvcj1cInN1Y2Nlc3NcIj5JbXBvcnRhbnQ8L1RhZz59XG4gICAgICAgIGV4dHJhPXtbXG4gICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAga2V5PVwiMVwiXG4gICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9jYW52YXMubm9ydGh3ZXN0ZXJuLmVkdS9jb3Vyc2VzLzEyODM4NS9wYWdlcy93aGljaC1icm93c2VyLXNob3VsZC1pLXVzZT9tb2R1bGVfaXRlbV9pZD0xNzA4NzI2XCJcbiAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICByZWw9XCJub3JlZmVycmVyIG5vb3BlbmVyXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICBSZWZlcmVuY2VcbiAgICAgICAgICA8L0J1dHRvbj4sXG4gICAgICAgIF19XG4gICAgICAgIGF2YXRhcj17eyBpY29uOiA8TGlrZUZpbGxlZCAvPiB9fVxuICAgICAgPlxuICAgICAgICA8Q29udGVudD5cbiAgICAgICAgICB7Y29udGVudH1cbiAgICAgICAgPC9Db250ZW50PlxuICAgICAgPC9QYWdlSGVhZGVyPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IE5vdGVzIH0gZnJvbSAnY29udGFpbmVyL2NhbnZhcy9ub3Rlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vaW5kZXgubS5sZXNzJztcblxuZXhwb3J0IGZ1bmN0aW9uIENhbnZhcygpIHtcbiAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMubm90ZXN9PjxOb3RlcyAvPjwvZGl2Pjtcbn1cbiIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IGRlZmF1bHQge1wibm90ZXNcIjpcIm5vdGVzLS1CT2NyalwifTsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHtcbiAgSGFzaFJvdXRlciwgUm91dGUsIFJvdXRlcyxcbn0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgSG9tZSBmcm9tICdjb250YWluZXIvaG9tZSc7XG5pbXBvcnQgR2FtZSBmcm9tICdjb250YWluZXIvZ2FtZSc7XG5pbXBvcnQgeyBDYW52YXMgfSBmcm9tICdjb250YWluZXIvY2FudmFzJztcblxuaW1wb3J0ICcuL3N0eWxlcy9kZWZhdWx0Lmxlc3MnO1xuaW1wb3J0ICdhbnRkL2Rpc3QvYW50ZC5kYXJrLmxlc3MnO1xuXG5jbGFzcyBSb290IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8SGFzaFJvdXRlcj5cbiAgICAgICAgPFJvdXRlcz5cbiAgICAgICAgICA8Um91dGUgcGF0aD1cIi9cIiBlbGVtZW50PXs8SG9tZSAvPn0gLz5cbiAgICAgICAgICA8Um91dGUgcGF0aD1cImdhbWVcIiBlbGVtZW50PXs8R2FtZSAvPn0gLz5cbiAgICAgICAgICA8Um91dGUgcGF0aD1cImNhbnZhc1wiIGVsZW1lbnQ9ezxDYW52YXMgLz59IC8+XG4gICAgICAgIDwvUm91dGVzPlxuICAgICAgPC9IYXNoUm91dGVyPlxuICAgICk7XG4gIH1cbn1cblxuUmVhY3RET00ucmVuZGVyKFxuICA8Um9vdCAvPixcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSxcbik7XG4iXSwibmFtZXMiOlsiRU1lbnVNb2RlIiwiU3ViTWVudSIsIk5hdmlnYXRpb25CYXIiLCJjbGFzc05hbWUiLCJtb2RlIiwiaG9yaXpvbnRhbCIsImtleSIsImljb24iLCJUcm9waHlPdXRsaW5lZCIsInRpdGxlIiwidG8iLCJTdGFyT3V0bGluZWQiLCJyZW5kZXIiLCJzY29yZUF0b20iLCJsZXZlbEF0b20iLCJ3b3JkQXRvbSIsImlucHV0QXRvbSIsImNvcnJlY3RBdG9tIiwiU2NvcmVzIiwic2NvcmUiLCJsZXZlbCIsIkVDb3JyZWN0IiwiaW5pdEludEFycmF5IiwibGVuZ3RoIiwiQXJyYXkiLCJmaWxsIiwiUmFuZG9tV29yZCIsInJhbmRXb3JkIiwic2V0UmFuZFdvcmQiLCJjb3JyZWN0QXJyIiwic2V0Q29ycmVjdEFyciIsInVzZUVmZmVjdCIsInNwbGl0IiwibWFwIiwiYyIsImkiLCJjb3JyZWN0Iiwid3JvbmciLCJmaXhlZCIsIlVzZXJJbnB1dCIsInVzZXJWYWx1ZSIsInNldFVzZXJWYWx1ZSIsInNldFNjb3JlIiwidmFsdWUiLCJvbkNoYW5nZSIsImV2ZW50IiwibmV3Q29ycmVjdEFyciIsInNsaWNlIiwibG93ZXJWYWx1ZSIsInRvTG93ZXJDYXNlIiwiZm9yRWFjaCIsImNoYXJBdCIsImluY2x1ZGVzIiwibmV3UmFuZG9tV29yZCIsIkJhc2ljVHlwZUdhbWUiLCJQYXJhZ3JhcGgiLCJUaXRsZSIsImNvbnRlbnQiLCJ1bmRlcmxpbmUiLCJDb250ZW50IiwiY2hpbGRyZW4iLCJOb3RlcyIsInN1YlRpdGxlIiwidGFncyIsImNvbG9yIiwiZXh0cmEiLCJocmVmIiwidGFyZ2V0IiwicmVsIiwiYXZhdGFyIiwiTGlrZUZpbGxlZCIsIkNhbnZhcyIsInBhdGgiLCJlbGVtZW50IiwiUm9vdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiXSwic291cmNlUm9vdCI6IiJ9