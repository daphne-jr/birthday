"use strict";(self.webpackChunkbirthday=self.webpackChunkbirthday||[]).push([[305],{6753:(e,t,n)=>{n.d(t,{Z:()=>y});var o=n(4942),r=n(1413),i=n(9439),a=n(4925),l=n(7294),s=n(4768),c=n(4184),u=n.n(c),f={adjustX:1,adjustY:1},p=[0,0];const v={topLeft:{points:["bl","tl"],overflow:f,offset:[0,-4],targetOffset:p},topCenter:{points:["bc","tc"],overflow:f,offset:[0,-4],targetOffset:p},topRight:{points:["br","tr"],overflow:f,offset:[0,-4],targetOffset:p},bottomLeft:{points:["tl","bl"],overflow:f,offset:[0,4],targetOffset:p},bottomCenter:{points:["tc","bc"],overflow:f,offset:[0,4],targetOffset:p},bottomRight:{points:["tr","br"],overflow:f,offset:[0,4],targetOffset:p}};var g=n(5105),m=g.Z.ESC,d=g.Z.TAB;function C(e){var t=e.visible,n=e.setTriggerVisible,o=e.triggerRef,r=e.menuRef,i=e.menuClassName,a=e.onVisibleChange,s=function(e){switch(e.keyCode){case m:case d:t&&o.current&&(o.current.triggerRef.current&&o.current.triggerRef.current.focus(),n(!1),"function"==typeof a&&a(!1))}};return l.useEffect((function(){return t?(setTimeout((function(){!function(){if(r.current){var e,t,n,o=(null===(e=r.current.className)||void 0===e?void 0:e.includes(i))?r.current:null===(t=(n=r.current).querySelector)||void 0===t?void 0:t.call(n,i);o&&o.focus()}}(),window.addEventListener("keydown",s)}),100),function(){window.removeEventListener("keydown",s)}):function(){return null}}),[t]),{returnFocus:function(){t&&o.current&&o.current.triggerRef.current&&setTimeout((function(){var e,t,n;null===(e=o.current)||void 0===e||null===(t=e.triggerRef)||void 0===t||null===(n=t.current)||void 0===n||n.focus()}),100)}}}var b=n(2550),h=["arrow","prefixCls","transitionName","animation","align","placement","placements","getPopupContainer","showAction","hideAction","overlayClassName","overlayStyle","visible","trigger"];function w(e,t){var n=e.arrow,c=void 0!==n&&n,f=e.prefixCls,p=void 0===f?"rc-dropdown":f,g=e.transitionName,m=e.animation,d=e.align,w=e.placement,y=void 0===w?"bottomLeft":w,N=e.placements,R=void 0===N?v:N,k=e.getPopupContainer,O=e.showAction,A=e.hideAction,E=e.overlayClassName,Z=e.overlayStyle,T=e.visible,V=e.trigger,x=void 0===V?["hover"]:V,P=(0,a.Z)(e,h),S=l.useState(),L=(0,i.Z)(S,2),F=L[0],M=L[1],W="visible"in e?T:F,j=l.useRef(null);l.useImperativeHandle(t,(function(){return j.current}));var Y,q,B,H,I,X,z=l.useRef(null),D="".concat(p,"-menu"),G=C({visible:W,setTriggerVisible:M,triggerRef:j,menuRef:z,menuClassName:D,onVisibleChange:e.onVisibleChange}).returnFocus,J=function(){var t=e.overlay;return"function"==typeof t?t():t},K=function(t){var n=e.onOverlayClick,o=J().props;M(!1),n&&n(t),o.onClick&&o.onClick(t),G()},Q=function(){var e=J(),t={prefixCls:D,onClick:K,ref:(0,b.Yr)(e)?z:void 0};return"string"==typeof e.type&&delete t.prefixCls,l.createElement(l.Fragment,null,c&&l.createElement("div",{className:"".concat(p,"-arrow")}),l.cloneElement(e,t))},U=A;return U||-1===x.indexOf("contextMenu")||(U=["click"]),l.createElement(s.Z,(0,r.Z)((0,r.Z)({builtinPlacements:R},P),{},{prefixCls:p,ref:j,popupClassName:u()(E,(0,o.Z)({},"".concat(p,"-show-arrow"),c)),popupStyle:Z,action:x,showAction:O,hideAction:U||[],popupPlacement:y,popupAlign:d,popupTransitionName:g,popupAnimation:m,popupVisible:W,stretch:(I=e.minOverlayWidthMatchTrigger,X=e.alignPoint,("minOverlayWidthMatchTrigger"in e?I:!X)?"minWidth":""),popup:"function"==typeof e.overlay?Q:Q(),onPopupVisibleChange:function(t){var n=e.onVisibleChange;M(t),"function"==typeof n&&n(t)},getPopupContainer:k}),(B=(q=e.children).props?q.props:{},H=u()(B.className,void 0!==(Y=e.openClassName)?Y:"".concat(p,"-open")),W&&q?l.cloneElement(q,{className:H}):q))}const y=l.forwardRef(w)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,